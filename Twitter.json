{"paragraphs":[{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1482372419975_342517425","id":"20161222-020659_2031660194","dateCreated":"2016-12-22T02:06:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:131","text":"%pyspark\nimport twitter\nimport urlparse\nfrom pprint import pprint as pp\n\nclass TwitterAPI(object):\n    \"\"\"\n    TwitterAPI class allows the Connection to Twitter via OAuth\n    once you have registered with Twitter and receive the \n    necessary credentiials \n    \"\"\"\n\n\n    def __init__(self): \n        consumer_key = 'J0z9I39drXzQVfdIFKof38oos'\n        consumer_secret = 'fKlNgF4hZ8tacNnzuKslgU2781CSa79IRIYzgiVQVUCFSSGrkp'\n        access_token = '87976598-PaVQ8QBJxwrO7mlcUR533ybkKgltqzrA4wX6U3RY6'\n        access_secret = 'pQhMpiQwYKgmDCnyD0FO1Dhl7sEJ8Ifq0RbSeuvdrxhhi'\n     \n        self.consumer_key = consumer_key\n        self.consumer_secret = consumer_secret\n        self.access_token = access_token\n        self.access_secret = access_secret\n        self.auth = twitter.oauth.OAuth(access_token, access_secret, consumer_key, consumer_secret)\n        self.api = twitter.Twitter(auth=self.auth)\n\n    def searchTwitter(self, q, max_res=10,**kwargs):\n        search_results = self.api.search.tweets(q=q, count=10, **kwargs)\n        statuses = search_results['statuses']\n        max_results = min(1000, max_res)\n\n        for _ in range(10): \n            try:\n                next_results = search_results['search_metadata']['next_results']\n            except KeyError as e: \n                break\n\n            next_results = urlparse.parse_qsl(next_results[1:])\n            kwargs = dict(next_results)\n            search_results = self.api.search.tweets(**kwargs)\n            statuses += search_results['statuses']\n\n            if len(statuses) > max_results: \n                break\n        return statuses\n    \n    def parseTweets(self, statuses):\n        return [ (status['id'], \n                  status['created_at'], \n                  status['user']['id'],\n                  status['user']['name'], \n                  status['text'], \n                  url['expanded_url']) \n                        for status in statuses \n                            for url in status['entities']['urls'] ]\n                                \n    def getTweets(self, q,  max_res=10):\n        \"\"\"\n        Make a Twitter API call whilst managing rate limit and errors.\n        \"\"\"\n        def handleError(e, wait_period=2, sleep_when_rate_limited=True):\n            if wait_period > 3600: # Seconds\n                self.logger.error('Too many retries in getTweets: %s', e)\n                raise e\n            if e.e.code == 401:\n                self.logger.error('error 401 * Not Authorised * in getTweets: %s', e)\n                return None\n            elif e.e.code == 404:\n                self.logger.error('error 404 * Not Found * in getTweets: %s', e)\n                return None\n            elif e.e.code == 429: \n                self.logger.error('error 429 * API Rate Limit Exceeded * in getTweets: %s', e)\n                if sleep_when_rate_limited:\n                    self.logger.error('error 429 * Retrying in 15 minutes * in getTweets: %s', e)\n                    sys.stderr.flush()\n                    time.sleep(60*15 + 5)\n                    self.logger.info('error 429 * Retrying now * in getTweets: %s', e)\n                    return 2\n                else:\n                    raise e # Caller must handle the rate limiting issue\n            elif e.e.code in (500, 502, 503, 504):\n                self.logger.info('Encountered %i Error. Retrying in %i seconds' % (e.e.code, wait_period))\n                time.sleep(wait_period)\n                wait_period *= 1.5\n                return wait_period\n            else:\n                self.logger.error('Exit - aborting - %s', e)\n                raise e\n        \n        while True:\n            try:\n                self.searchTwitter( q, max_res=10)\n            except twitter.api.TwitterHTTPError as e:\n                error_count = 0 \n                wait_period = handleError(e, wait_period)\n                if wait_period is None:\n                    return\n                \n\nt= TwitterAPI()\nq=\"gladwell\"\ntsearch = t.searchTwitter(q)\n\nlen(tsearch)\n","dateUpdated":"2016-12-22T02:15:42+0000","dateFinished":"2016-12-22T02:15:42+0000","dateStarted":"2016-12-22T02:15:42+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"18\n"},"focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1482372433189_596482348","id":"20161222-020713_607916425","dateCreated":"2016-12-22T02:07:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:290","dateUpdated":"2016-12-22T02:27:37+0000","dateFinished":"2016-12-22T02:27:37+0000","dateStarted":"2016-12-22T02:27:37+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"{u'contributors': None,\n u'coordinates': None,\n u'created_at': u'Thu Dec 22 02:00:29 +0000 2016',\n u'entities': {u'hashtags': [{u'indices': [133, 139], u'text': u'quote'}],\n               u'symbols': [],\n               u'urls': [],\n               u'user_mentions': []},\n u'favorite_count': 0,\n u'favorited': False,\n u'geo': None,\n u'id': 811753244787691520,\n u'id_str': u'811753244787691520',\n u'in_reply_to_screen_name': None,\n u'in_reply_to_status_id': None,\n u'in_reply_to_status_id_str': None,\n u'in_reply_to_user_id': None,\n u'in_reply_to_user_id_str': None,\n u'is_quote_status': False,\n u'lang': u'en',\n u'metadata': {u'iso_language_code': u'en', u'result_type': u'recent'},\n u'place': None,\n u'retweet_count': 0,\n u'retweeted': False,\n u'source': u'<a href=\"http://www.tweetjukebox.com\" rel=\"nofollow\">Tweet Jukebox</a>',\n u'text': u'The values of the world we inhabit and the people we surround ourselves with have a profound effect on who we are.\\u2015 Malcolm Gladwell #quote',\n u'truncated': False,\n u'user': {u'contributors_enabled': False,\n           u'created_at': u'Wed Jun 17 02:50:34 +0000 2015',\n           u'default_profile': False,\n           u'default_profile_image': False,\n           u'description': u\"Now you're ready to make it a great day! #speaker #leadership #customerservice #motivation #inspiration #selfimprovement #podcast #management and so much more!\",\n           u'entities': {u'description': {u'urls': []},\n                         u'url': {u'urls': [{u'display_url': u'everydaypropertymanager.com',\n                                             u'expanded_url': u'http://www.everydaypropertymanager.com',\n                                             u'indices': [0, 23],\n                                             u'url': u'https://t.co/hnG8XRMCXk'}]}},\n           u'favourites_count': 1313,\n           u'follow_request_sent': False,\n           u'followers_count': 5064,\n           u'following': False,\n           u'friends_count': 5219,\n           u'geo_enabled': False,\n           u'has_extended_profile': False,\n           u'id': 3247390454,\n           u'id_str': u'3247390454',\n           u'is_translation_enabled': False,\n           u'is_translator': False,\n           u'lang': u'en',\n           u'listed_count': 1877,\n           u'location': u'Minnesota, USA',\n           u'name': u'Jeremy P. Sorensen',\n           u'notifications': False,\n           u'profile_background_color': u'000000',\n           u'profile_background_image_url': u'http://abs.twimg.com/images/themes/theme1/bg.png',\n           u'profile_background_image_url_https': u'https://abs.twimg.com/images/themes/theme1/bg.png',\n           u'profile_background_tile': False,\n           u'profile_banner_url': u'https://pbs.twimg.com/profile_banners/3247390454/1434510884',\n           u'profile_image_url': u'http://pbs.twimg.com/profile_images/616800059443679232/mmLyp6ed_normal.jpg',\n           u'profile_image_url_https': u'https://pbs.twimg.com/profile_images/616800059443679232/mmLyp6ed_normal.jpg',\n           u'profile_link_color': u'4A913C',\n           u'profile_sidebar_border_color': u'000000',\n           u'profile_sidebar_fill_color': u'000000',\n           u'profile_text_color': u'000000',\n           u'profile_use_background_image': False,\n           u'protected': False,\n           u'screen_name': u'everymanager',\n           u'statuses_count': 110592,\n           u'time_zone': u'Central Time (US & Canada)',\n           u'translator_type': u'none',\n           u'url': u'https://t.co/hnG8XRMCXk',\n           u'utc_offset': -21600,\n           u'verified': False}}\n"},"text":"%pyspark\npp(tsearch[1])"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1482373657803_2132375887","id":"20161222-022737_1762329483","dateCreated":"2016-12-22T02:27:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:405","dateUpdated":"2016-12-22T02:28:45+0000","dateFinished":"2016-12-22T02:28:45+0000","dateStarted":"2016-12-22T02:28:45+0000","result":{"code":"SUCCESS","type":"TEXT","msg":"[(811755513117609986,\n  u'Thu Dec 22 02:09:30 +0000 2016',\n  37586551,\n  u'Jay McDonald',\n  u'Malcolm Gladwell.- #quote #image\\nhttps://t.co/Gu4OFENOwW https://t.co/yuOEIWNdZO',\n  u'https://goo.gl/Vn3lYU'),\n (811752105769697280,\n  u'Thu Dec 22 01:55:58 +0000 2016',\n  40133958,\n  u'ralph horowitz',\n  u'Michael Lewis with Malcolm Gladwell: The Undoing Project https://t.co/7wF3VlnOds via @YouTube Genius interviewing genius',\n  u'https://youtu.be/XUeYA4XybZ4'),\n (811750871587373056,\n  u'Thu Dec 22 01:51:04 +0000 2016',\n  255085272,\n  u'Anthony Marquez',\n  u'Outliers: The Story of Success Malcolm Gladwell (Author) (4487) Buy new: $29.00 $19.59 609 used &amp; new from $0.01\\u2026 https://t.co/l76wLoU157',\n  u'http://amzn.to/2aVkdpm'),\n (811744797178347526,\n  u'Thu Dec 22 01:26:55 +0000 2016',\n  768419697666686976,\n  u'Elite Summaries',\n  u'5 Best Life Lessons for Entrepreneurs from Outliers https://t.co/UPeSvqVHFT',\n  u'http://www.elitesummaries.com/outliers-by-malcolm-gladwell/?GPv8h'),\n (811738600270401537,\n  u'Thu Dec 22 01:02:18 +0000 2016',\n  466958405,\n  u'TONY BAILEY',\n  u'\"Truly successful decision-making relies on a balance between deliberate and instinctive thinking.\" Malcolm\\u2026 https://t.co/2zgheEFfwE',\n  u'https://twitter.com/i/web/status/811738600270401537'),\n (811731219683700736,\n  u'Thu Dec 22 00:32:58 +0000 2016',\n  17235735,\n  u'Laura',\n  u'RT @clubaclub: @AdamSmith_usa @Ciocia Malcom Gladwell to some degree predicted this:  :https://t.co/8dmUQ4cMCd',\n  u'http://revisionisthistory.com/episodes/01-the-lady-vanishes')]\n"},"text":"%pyspark\ntparsed = t.parseTweets(tsearch)\npp(tparsed)\n"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1482373701256_-1236623400","id":"20161222-022821_2091463743","dateCreated":"2016-12-22T02:28:21+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:484","dateUpdated":"2016-12-22T02:28:32+0000","text":""}],"name":"Twitter","id":"2C43DRQM4","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}